name: Release

on:
  push:
    branches: [ signed-macos-binary ]
#  release:
#    types: [released]

jobs:
#  releases-matrix:
#    name: Release Go Binary
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        # build and publish in parallel: */amd64, */arm64
#        goos: [linux, windows]
#        goarch: [amd64, arm64]
#        exclude:
#          - goarch: arm64
#            goos: windows
#    steps:
#      - uses: actions/checkout@v2
#      - uses: wangyoucao577/go-release-action@v1.20
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }} # provided by github/actions
#          goos: ${{ matrix.goos }}
#          goarch: ${{ matrix.goarch }}
#          goversion: "1.17"
#          binary_name: "couper"
  macos:
    runs-on: macos-11
    strategy:
      matrix:
        goarch: [amd64, arm64]
    env:
      AC_PASSWORD: ${{ secrets.MACOS_DEVELOPER_APPLICATION_PWD }}
    steps:
      - uses: actions/checkout@v2
      - name: 'setup go'
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: "import certificate"
        uses: devbotsxyz/import-signing-certificate@v1
        with:
          certificate-data: ${{ secrets.MACOS_CERTIFICATE_BASE64 }}
          certificate-passphrase: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          keychain-password: ${{ secrets.MACOS_KEYCHAIN_PWD }}
      - name: 'install gon'
        run: go install github.com/mitchellh/gon/...@v0.2.3
      - name: 'build couper'
        run: go build -race -o ./.macos/Couper.app/Contents/MacOS/couper main.go
      - name: 'sign couper binary'
        run: gon -log-level=info -log-json ./.gon_sign.hcl
      - name: 'verify signed binary'
        run: codesign -dvvv --deep --strict ./.macos/Couper.app/Contents/MacOS/couper
      - name: 'create macOS dmg with signed binary'
        run: cd .macos && go run make.go && cd ..
      - name: 'create signed binary zip-file' # keep utf8 things with ditto
        run: ditto -c -k --sequesterRsrc ./.macos/Couper.app/Contents/MacOS/couper ./.macos/couper.zip
      - name: 'notarize and stable'
        run: gon -log-level=info -log-json ./.gon.hcl
      - name: 'verify notarization'
        run: spctl -vvv --assess --type exec ./.macos/Couper.app/Contents/MacOS/couper
#      - name: 'entitlement format'
#        run: plutil -convert xml1 .macos/entitlements.plist && plutil -lint .macos/entitlements.plist
