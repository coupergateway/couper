name: Release

on:
  release:
    types: [prereleased,released]

jobs:
  linux-windows:
    name: Release Go Binary
    runs-on: ubuntu-latest
    env:
      VERSION_PACKAGE: 'github.com/avenga/couper/utils'
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=build_date::$(date +'%F')"
      - uses: wangyoucao577/go-release-action@v1.22
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "1.17"
          binary_name: "couper"
          ldflags: "-X ${VERSION_PACKAGE}.VersionName=${GITHUB_REF_NAME} -X ${VERSION_PACKAGE}.BuildName=${{ steps.vars.outputs.sha_short }} -X ${VERSION_PACKAGE}.BuildDate=${{ steps.vars.outputs.build_date }}"
          sha256sum: true
  macos:
    runs-on: macos-11
    strategy:
      matrix:
        goarch: [amd64, arm64]
    env:
      AC_PASSWORD: ${{ secrets.MACOS_DEVELOPER_APPLICATION_PWD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VERSION_PACKAGE: 'github.com/avenga/couper/utils'
    steps:
      - uses: actions/checkout@v2
      - name: 'setup go'
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: 'import certificate'
        uses: devbotsxyz/import-signing-certificate@v1
        with:
          certificate-data: ${{ secrets.MACOS_CERTIFICATE_BASE64 }}
          certificate-passphrase: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          keychain-password: ${{ secrets.MACOS_KEYCHAIN_PWD }}
      - name: 'install gon'
        run: go install github.com/mitchellh/gon/...@v0.2.3
      - name: 'install assets-uploader'
        run: go install github.com/wangyoucao577/assets-uploader/...@v0.8.0
      - name: 'build couper'
        run: |
          go build -ldflags "-X ${VERSION_PACKAGE}.VersionName=`git describe --tags --abbrev=0 --exact-match || git symbolic-ref -q --short HEAD` -X ${VERSION_PACKAGE}.BuildName=`git rev-parse --short HEAD` -X ${VERSION_PACKAGE}.BuildDate=`date +'%F'`" -race -v -o ./.macos/Couper.app/Contents/couper main.go
      - name: 'cleanup finder attributes'
        run: |
          xattr -c ./.macos/Couper.app/Contents/Info.plist
          xattr -c ./.macos/Entitlements.plist
          plutil -convert xml1 .macos/Entitlements.plist && plutil -lint .macos/Entitlements.plist
      - name: 'verify identity'
        run: security find-identity -v
      - name: 'sign couper binary'
        run: codesign -i "binary.com.avenga.couper" -s "4B8FA10CCB8F16F9F464385768D82645831F4644" -f -v --timestamp --options runtime ./.macos/Couper.app/Contents/couper
      - name: 'create signed binary archive' # keep utf8 things with ditto
        run: ditto -c -k --sequesterRsrc ./.macos/Couper.app/Contents/couper ./.macos/couper.zip
#      - name: 'create macOS dmg with signed binary'
#        run: |
#          mkdir -p ./.macos/Couper.app/Contents/MacOS
#          mv ./.macos/Couper.app/Contents/couper ./.macos/Couper.app/Contents/MacOS/couper
#          codesign -s "4B8FA10CCB8F16F9F464385768D82645831F4644" -f -v --timestamp --options runtime --entitlements ./.macos/Entitlements.plist ./.macos/Couper.app/Contents/MacOS/couper
#          cd .macos && go run make.go && cd ..
      - name: 'notarize' # and stable'
        run: gon -log-level=info -log-json ./.gon.hcl
#      - name: 'verify image notarization'
#        run: spctl --assess --type open --context context:primary-signature -v ./.macos/couper.dmg
      - name: 'upload archive'
        id: 'vars'
        run: |
          mv ./.macos/couper.zip ./couper-$GITHUB_REF_NAME-macos-${{ matrix.goarch }}.zip && github-assets-uploader -f ./couper-$GITHUB_REF_NAME-macos-${{ matrix.goarch }}.zip -overwrite -repo avenga/couper -tag $GITHUB_REF_NAME -token $GITHUB_TOKEN
          sha256sum ./couper-$GITHUB_REF_NAME-macos-${{ matrix.goarch }}.zip | cut -d ' ' -f1 > ./couper-$GITHUB_REF_NAME-macos-${{ matrix.goarch }}.sha256 && github-assets-uploader -f ./couper-$GITHUB_REF_NAME-macos-${{ matrix.goarch }}.sha256 -overwrite -repo avenga/couper -tag $GITHUB_REF_NAME -token $GITHUB_TOKEN
          echo "::set-output name=${{ matrix.goarch }}::$(sha256sum ./couper-$GITHUB_REF_NAME-macos-${{ matrix.goarch }}.zip | cut -d ' ' -f1)"
#      - name: 'upload image'
#        run: mv ./.macos/couper.dmg ./couper-$GITHUB_REF_NAME-macos-${{ matrix.goarch }}.dmg && github-assets-uploader -f ./couper-$GITHUB_REF_NAME-macos-${{ matrix.goarch }}.dmg -overwrite -repo avenga/couper -tag $GITHUB_REF_NAME -token $GITHUB_TOKEN -mediatype 'application/octet-stream'
  brewlease:
    name: 'update homebrew formula'
    runs-on: ubuntu-latest
    needs:
#      - linux-windows
      - macos
    env:
      MACOS_AMD64_SHA256: ${{ needs.macos.steps.vars.outputs.amd64 }}
      MACOS_ARM64_SHA256: ${{ needs.macos.steps.vars.outputs.arm64 }}
    steps:
      - name: 'checkout'
        uses: actions/checkout@v2
        # tg > tpl > commit
