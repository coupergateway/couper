name: Release

on:
  push:
    branches: [ signed-macos-binary ]
#  release:
#    types: [released]

jobs:
#  releases-matrix:
#    name: Release Go Binary
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        # build and publish in parallel: */amd64, */arm64
#        goos: [linux, windows]
#        goarch: [amd64, arm64]
#        exclude:
#          - goarch: arm64
#            goos: windows
#    steps:
#      - uses: actions/checkout@v2
#      - uses: wangyoucao577/go-release-action@v1.20
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }} # provided by github/actions
#          goos: ${{ matrix.goos }}
#          goarch: ${{ matrix.goarch }}
#          goversion: "1.17"
#          binary_name: "couper"
  macos:
    runs-on: macos-11
    strategy:
      matrix:
        goarch: [amd64, arm64]
    env:
      AC_PASSWORD: ${{ secrets.MACOS_DEVELOPER_APPLICATION_PWD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VERSION_PACKAGE: "github.com/avenga/couper/utils"
    steps:
      - uses: actions/checkout@v2
      - name: 'setup go'
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: "import certificate"
        uses: devbotsxyz/import-signing-certificate@v1
        with:
          certificate-data: ${{ secrets.MACOS_CERTIFICATE_BASE64 }}
          certificate-passphrase: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          keychain-password: ${{ secrets.MACOS_KEYCHAIN_PWD }}
      - name: 'install gon'
        run: go install github.com/mitchellh/gon/...@v0.2.3
      - name: 'install assets-uploader'
        run: go install github.com/wangyoucao577/assets-uploader/...@v0.8.0
      - name: 'build couper'
        run: |
          go build -ldflags "-X ${VERSION_PACKAGE}.VersionName=`git describe --tags --abbrev=0 --exact-match || git symbolic-ref -q --short HEAD` -X ${VERSION_PACKAGE}.BuildName=`git rev-parse --short HEAD` -X ${VERSION_PACKAGE}.BuildDate=`date +'%F'`" -race -v -o ./.macos/couper main.go
#          mkdir -p ./.macos/Couper.app/Contents/MacOS
#          cp ./.macos/couper ./.macos/Couper.app/Contents/MacOS/couper
#      - name: 'cleanup finder attributes'
#        run: xattr -c ./.macos/Couper.app/Contents/Info.plist
      - name: 'verify identity'
        run: security find-identity -v
#      - name: 'sign Couper.app binary'
#        run: codesign --deep -s "4B8FA10CCB8F16F9F464385768D82645831F4644" -f -v --timestamp --options runtime --entitlements ./.macos/entitlements.plist ./.macos/Couper.app/Contents/MacOS/couper
      - name: 'sign couper binary'
        run: codesign --deep -s "4B8FA10CCB8F16F9F464385768D82645831F4644" -f -v --timestamp --options runtime --entitlements ./.macos/entitlements.plist ./.macos/couper
#      - name: 'create macOS dmg with signed binary'
#        run: cd .macos && go run make.go && cd ..
#      - name: 'sign couper image'
#        run: codesign --force --deep -s "4B8FA10CCB8F16F9F464385768D82645831F4644" -f -v --timestamp --entitlements ./.macos/entitlements.plist ./.macos/couper.dmg
      - name: 'create signed binary zip-file' # keep utf8 things with ditto
        run: ditto -c -k --sequesterRsrc ./.macos/couper ./.macos/couper.zip
      - name: 'sign couper archive'
        run: codesign --deep --force -s "4B8FA10CCB8F16F9F464385768D82645831F4644" -f -v --timestamp --entitlements ./.macos/entitlements.plist ./.macos/couper.zip
      - name: 'notarize and stable'
        run: gon -log-level=info -log-json ./.gon.hcl
#      - name: 'verify image notarization'
#        run: spctl --assess --type open --context context:primary-signature -v ./.macos/couper.dmg
      - name: 'verify archive notarization'
        run: spctl -vvv --assess --type open ./.macos/couper.zip
      - name: 'upload archive'
        run: mv ./.macos/couper.zip ./couper_macos_$goarch.zip && github-assets-uploader -f ./couper_macos_$goarch.zip -overwrite -repo avenga/couper -tag $GITHUB_REF_NAME -token $GITHUB_TOKEN
#      - name: 'entitlement format'
#        run: plutil -convert xml1 .macos/entitlements.plist && plutil -lint .macos/entitlements.plist
